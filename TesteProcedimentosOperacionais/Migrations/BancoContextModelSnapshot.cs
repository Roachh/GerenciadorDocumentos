// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteProcedimentosOperacionais.Data;

#nullable disable

namespace TesteProcedimentosOperacionais.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TesteProcedimentosOperacionais.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Categoria 1",
                            ProcessoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Categoria 2",
                            ProcessoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Categoria 3",
                            ProcessoId = 2
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Categoria 4",
                            ProcessoId = 2
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Categoria 5",
                            ProcessoId = 3
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Categoria 6",
                            ProcessoId = 3
                        });
                });

            modelBuilder.Entity("TesteProcedimentosOperacionais.Models.Documento", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("longtext")
                        .HasColumnName("Arquivo");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProcessoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("TesteProcedimentosOperacionais.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Processos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Processo 1"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Processo 2"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Processo 3"
                        });
                });

            modelBuilder.Entity("TesteProcedimentosOperacionais.Models.Documento", b =>
                {
                    b.HasOne("TesteProcedimentosOperacionais.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteProcedimentosOperacionais.Models.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Processo");
                });
#pragma warning restore 612, 618
        }
    }
}
